$date
	Thu Nov 25 09:20:26 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module mips_register_file_tb $end
$var wire 32 ! read_data_v0 [31:0] $end
$var wire 32 " read_data_2 [31:0] $end
$var wire 32 # read_data_1 [31:0] $end
$var reg 1 $ clk $end
$var reg 5 % read_reg_1 [4:0] $end
$var reg 5 & read_reg_2 [4:0] $end
$var reg 1 ' reset $end
$var reg 32 ( write_data [31:0] $end
$var reg 1 ) write_enable $end
$var reg 5 * write_reg [4:0] $end
$scope module inst_reg $end
$var wire 1 $ clk $end
$var wire 32 + read_data_v0 [31:0] $end
$var wire 5 , read_reg_1 [4:0] $end
$var wire 5 - read_reg_2 [4:0] $end
$var wire 1 ' reset $end
$var wire 32 . write_data [31:0] $end
$var wire 1 ) write_enable $end
$var wire 5 / write_reg [4:0] $end
$var wire 32 0 read_data_2 [31:0] $end
$var wire 32 1 read_data_1 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 2
bx 1
bx 0
b0 /
b0 .
bx -
bx ,
bx +
b0 *
0)
b0 (
1'
bx &
bx %
0$
bx #
bx "
bx !
$end
#50
b0 !
b0 +
b100000 2
1$
#100
b0 #
b0 1
b10000 %
b10000 ,
b10000 *
b10000 /
b100101101011010000111 (
b100101101011010000111 .
1)
0'
0$
#150
b100101101011010000111 #
b100101101011010000111 1
1$
#200
0)
0$
#250
1$
#300
b0 "
b0 0
b10100 &
b10100 -
b10100 *
b10100 /
b11101001100101110110001 (
b11101001100101110110001 .
1)
0$
#350
b11101001100101110110001 "
b11101001100101110110001 0
1$
#400
0)
0$
#450
1$
#500
1'
0$
#550
b0 "
b0 0
b0 #
b0 1
b100000 2
1$
#600
0$
